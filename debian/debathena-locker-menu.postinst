#!/bin/sh
# postinst script for debathena-locker-menu
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

SHAREDIR="/usr/share/debathena-locker-menu"
ICON_NONFREE_DIR="/usr/share/debathena-locker-menu/icons-nonfree"
ICONS="acroread.png mathematica.png maple.png sas.png stata.png tecplot.png xess.png"

# Source debconf library.
. /usr/share/debconf/confmodule

case "$1" in
    configure)
	db_get debathena-locker-menu/license
	if [ "$RET" = "true" ]; then
	    echo "Using real icons for debathena-locker-menu..." >&2
	    for i in $ICONS; do
		if ! cp -f "$ICON_NONFREE_DIR/$i" "$SHAREDIR/$i"; then
		    echo "Can't find real icon for $i, falling back to generic" >&2
 		    ln -nsf "$SHAREDIR/generic-icon.png" "$SHAREDIR/$i"
		fi
	    done
	else
	    echo "Using generic icons for debathena-locker-menu..." >&2
	    for i in $ICONS; do
		ln -nsf "$SHAREDIR/generic-icon.png" "$SHAREDIR/$i"
	    done
	fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
